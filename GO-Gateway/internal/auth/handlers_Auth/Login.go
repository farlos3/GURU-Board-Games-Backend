package handlers_Auth

import (
    "log"

	"github.com/gofiber/fiber/v2"
    
	"guru-game/internal/auth/service_auth"
    "guru-game/internal/auth/otp"
	"guru-game/models"
)

// LoginHandler
func LoginHandler(c *fiber.Ctx) error {
	input := new(models.User)
	if err := c.BodyParser(input); err != nil {
		return c.Status(fiber.StatusBadRequest).JSON(fiber.Map{"error": "Invalid input"})
	}

	log.Println("üîî [LoginHandler] user submitted:")
	log.Printf("Identifier: %s\n", input.Identifier)

	user, err := service_auth.LoginUser(input.Identifier, input.Password)
	if err != nil {
		return c.Status(fiber.StatusUnauthorized).JSON(fiber.Map{"error": "Invalid credentials"})
	}

	// ‡∏™‡∏£‡πâ‡∏≤‡∏á OTP ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏•‡∏±‡∏á login ‡∏ú‡πà‡∏≤‡∏ô
	otpCode, err := otp.GenerateOTP()
	if err != nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{"error": "Failed to generate OTP"})
	}

	log.Printf("Generated OTP for %s: %s\n", user.Email, otpCode)

	// ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å OTP ‡πÅ‡∏•‡∏∞ user ‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß (‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥ ‡∏´‡∏£‡∏∑‡∏≠ DB)
	otp.SaveOTP(user.Email, otpCode)
	otp.SaveTempUser(user.Email, *user)

	// ‡∏™‡πà‡∏á OTP ‡∏ó‡∏≤‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
	otp.SendEmail(user.Email, otpCode)

	// ‡πÅ‡∏à‡πâ‡∏á client ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô OTP
	return c.JSON(fiber.Map{
		"requireOtp": true,
		"email":      user.Email,
		"message":    "OTP sent, please verify it",
	})
}