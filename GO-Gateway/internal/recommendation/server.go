package recommendation

import (
	"context"
	"log"
	"fmt"
	recommendationpb "guru-game/gRPC"
)

// ‡∏™‡∏£‡πâ‡∏≤‡∏á struct RecommendationServer ‡∏ó‡∏µ‡πà implement interface ‡∏Ç‡∏≠‡∏á gRPC
type RecommendationServer struct {
	recommendationpb.UnimplementedRecommendationServiceServer
}

// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á implement ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏ô gRPC service
func (s *RecommendationServer) GetRecommendations(ctx context.Context, req *recommendationpb.RecommendationRequest) (*recommendationpb.RecommendationResponse, error) {
	log.Printf("üì§ [gRPC Server] GetRecommendations called")
	log.Printf("   - User ID: %s", req.UserId)
	log.Printf("   - Limit: %d", req.Limit)
	
	// TODO: ‡πÉ‡∏™‡πà logic ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á recommendation ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
	
	log.Printf("‚úÖ [gRPC Server] Returning empty recommendations for now")
	
	// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á return ‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡∏•‡πà‡∏≤
	return &recommendationpb.RecommendationResponse{
		Boardgames: []*recommendationpb.Boardgame{}, // empty array ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ
	}, nil
}

func (s *RecommendationServer) SendAllBoardgames(ctx context.Context, req *recommendationpb.BoardgamesRequest) (*recommendationpb.Response, error) {
	log.Printf("üì• [gRPC Server] SendAllBoardgames called")
	log.Printf("   - Received %d boardgames from client", len(req.Boardgames))
	
	// Log ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á boardgames ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö (‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà 5 ‡∏≠‡∏±‡∏ô‡πÅ‡∏£‡∏Å)
	for i, bg := range req.Boardgames {
		if i < 5 {
			log.Printf("   - Boardgame %d: %s (ID: %d)", i+1, bg.Title, bg.Id)
			log.Printf("     Players: %d-%d, Time: %d-%d min, Rating: %.2f", 
				bg.MinPlayers, bg.MaxPlayers, bg.PlayTimeMin, bg.PlayTimeMax, bg.RatingAvg)
		}
	}
	
	if len(req.Boardgames) > 5 {
		log.Printf("   ... and %d more boardgames", len(req.Boardgames)-5)
	}
	
	// TODO: ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
	// ‡πÄ‡∏ä‡πà‡∏ô:
	// - ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á database ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö recommendation system
	// - ‡∏™‡πà‡∏á‡πÑ‡∏õ ML model ‡πÄ‡∏û‡∏∑‡πà‡∏≠ train
	// - ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• categories, ratings ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö algorithm
	
	log.Printf("‚úÖ [gRPC Server] Successfully processed %d boardgames", len(req.Boardgames))
	
	return &recommendationpb.Response{
		Success: true,
		Message: fmt.Sprintf("Successfully received and processed %d boardgames", len(req.Boardgames)),
	}, nil
}