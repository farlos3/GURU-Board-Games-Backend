package search

import (
	"encoding/json"
	"fmt"
	"log"

	"github.com/elastic/go-elasticsearch/v9"
)

// ฟังก์ชันการค้นหาบอร์ดเกมใน Elasticsearch
func SearchBoardGames(query string) ([]BoardGame, error) {
	// สร้าง query body สำหรับ Elasticsearch
	searchBody := fmt.Sprintf(`{
		"query": {
			"match": {
				"name": "%s"
			}
		}
	}`, query)

	// ส่งคำขอไปยัง Elasticsearch
	res, err := es.Search(
		es.Search.WithIndex("boardgames"), // ชื่อ index ที่เก็บข้อมูลบอร์ดเกม
		es.Search.WithBody(strings.NewReader(searchBody)),
		es.Search.WithPretty(),
	)
	if err != nil {
		return nil, err
	}
	defer res.Body.Close()

	if res.IsError() {
		return nil, fmt.Errorf("Error response from Elasticsearch: %s", res.String())
	}

	// แปลงข้อมูลจาก Elasticsearch response
	var searchResults struct {
		Hits struct {
			Hits []struct {
				Source BoardGame `json:"_source"`
			} `json:"hits"`
		} `json:"hits"`
	}

	if err := json.NewDecoder(res.Body).Decode(&searchResults); err != nil {
		return nil, fmt.Errorf("Error parsing the response body: %s", err)
	}

	// คืนค่าผลลัพธ์ที่ได้จากการค้นหา
	var boardGames []BoardGame
	for _, hit := range searchResults.Hits.Hits {
		boardGames = append(boardGames, hit.Source)
	}

	return boardGames, nil
}